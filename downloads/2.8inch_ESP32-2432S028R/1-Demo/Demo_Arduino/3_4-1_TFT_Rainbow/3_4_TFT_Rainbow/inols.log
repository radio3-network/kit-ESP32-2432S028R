






Started logging.

<<<
Content-Length: 3269

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":18360,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"c:\\Users\\zhang'pei\\Desktop\\ESP32-2432S028例子\\arduino\\Source code\\3_4-1_TFT_Rainbow\\3_4_TFT_Rainbow","rootUri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","name":"3_4_TFT_Rainbow"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4902

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino","languageId":"cpp","version":1,"text":"/*\r\n  An example showing rainbow colours on a 1.8\" TFT LCD screen\r\n  and to show a basic example of font use.\r\n\r\n  Make sure all the display driver and pin connections are correct by\r\n  editing the User_Setup.h file in the TFT_eSPI library folder.\r\n\r\n  Note that yield() or delay(0) must be called in long duration for/while\r\n  loops to stop the ESP8266 watchdog triggering.\r\n\r\n  #########################################################################\r\n  ###### DON'T FORGET TO UPDATE THE User_Setup.h FILE IN THE LIBRARY ######\r\n  #########################################################################\r\n*/\r\n\r\n#include <TFT_eSPI.h> // Graphics and font library for ST7735 driver chip\r\n#include <SPI.h>\r\n\r\n\r\nTFT_eSPI tft = TFT_eSPI();  // Invoke library, pins defined in User_Setup.h\r\n\r\nunsigned long targetTime = 0;\r\nbyte red = 31;\r\nbyte green = 0;\r\nbyte blue = 0;\r\nbyte state = 0;\r\nunsigned int colour = red << 11;\r\n\r\nvoid setup(void) {\r\n  pinMode(21, OUTPUT);\r\n  digitalWrite(21, 1);//Turn on the backlight\r\n  tft.init();\r\n  tft.setRotation(1);\r\n  tft.fillScreen(TFT_BLACK);\r\n\r\n  targetTime = millis() + 1000;\r\n}\r\n\r\nvoid loop() {\r\n   tft.fillScreen(TFT_RED);\r\n   delay(2000);\r\n   tft.fillScreen(TFT_GREEN);\r\n   delay(2000);\r\n   tft.fillScreen(TFT_BLUE);\r\n   delay(2000);\r\n   tft.fillScreen(TFT_BLACK);\r\n   delay(2000);\r\n   tft.fillScreen(TFT_WHITE);\r\n   delay(2000);\r\n   tft.fillScreen(random(0x10000));\r\n   delay(2000);\r\n\r\n  // LCD_Clear(0x0000);\r\n   //delay(2000);\r\n   // LCD_Clear(0xfffc);\r\n   //delay(2000);\r\n   if (targetTime < millis()) \r\n   {\r\n    targetTime = millis() + 10000;\r\n\r\n    // Colour changing state machine\r\n   for (int i = 0; i < 160; i++) {\r\n      tft.drawFastVLine(i, 0, tft.height(), colour);\r\n      switch (state) {\r\n        case 0:\r\n          green += 2;\r\n          if (green == 64) {\r\n            green = 63;\r\n            state = 1;\r\n          }\r\n          break;\r\n        case 1:\r\n          red--;\r\n          if (red == 255) {\r\n            red = 0;\r\n            state = 2;\r\n          }\r\n          break;\r\n        case 2:\r\n          blue ++;\r\n          if (blue == 32) {\r\n            blue = 31;\r\n            state = 3;\r\n          }\r\n          break;\r\n        case 3:\r\n          green -= 2;\r\n          if (green == 255) {\r\n            green = 0;\r\n            state = 4;\r\n          }\r\n          break;\r\n        case 4:\r\n          red ++;\r\n          if (red == 32) {\r\n            red = 31;\r\n            state = 5;\r\n          }\r\n          break;\r\n        case 5:\r\n          blue --;\r\n          if (blue == 255) {\r\n            blue = 0;\r\n            state = 0;\r\n          }\r\n          break;\r\n      }\r\n      colour = red << 11 | green << 5 | blue;\r\n    }\r\n\r\n    // The standard ADAFruit font still works as before\r\n    tft.setTextColor(TFT_BLACK);\r\n    tft.setCursor (12, 5);\r\n    tft.print(\"Original ADAfruit font!\");\r\n\r\n    // The new larger fonts do not use the .setCursor call, coords are embedded\r\n    tft.setTextColor(TFT_BLACK, TFT_BLACK); // Do not plot the background colour\r\n\r\n    // Overlay the black text on top of the rainbow plot (the advantage of not drawing the backgorund colour!)\r\n    tft.drawCentreString(\"Font size 2\", 80, 14, 2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    //tft.drawCentreString(\"Font size 2\",81,12,2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    tft.drawCentreString(\"Font size 4\", 80, 30, 4); // Draw text centre at position 80, 24 using font 4\r\n\r\n    tft.drawCentreString(\"12.34\", 80, 54, 6); // Draw text centre at position 80, 24 using font 6\r\n\r\n    tft.drawCentreString(\"12.34 is in font size 6\", 80, 92, 2); // Draw text centre at position 80, 90 using font 2\r\n\r\n    // Note the x position is the top left of the font!\r\n\r\n    // draw a floating point number\r\n    float pi = 3.14159; // Value to print\r\n    int precision = 3;  // Number of digits after decimal point\r\n    int xpos = 50;      // x position\r\n    int ypos = 110;     // y position\r\n    int font = 2;       // font number only 2,4,6,7 valid. Font 6 only contains characters [space] 0 1 2 3 4 5 6 7 8 9 0 : a p m\r\n    xpos += tft.drawFloat(pi, precision, xpos, ypos, font); // Draw rounded number and return new xpos delta for next print position\r\n    tft.drawString(\" is pi\", xpos, ypos, font); // Continue printing from new x position\r\n    delay(5000);\r\n  }\r\n}\r\n"}}}Content-Length: 346

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}






Started logging.

<<<
Content-Length: 3267

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":840,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"c:\\Users\\zhang'pei\\Desktop\\ESP32-2432S028例子\\arduino\\Source code\\3_4-1_TFT_Rainbow\\3_4_TFT_Rainbow","rootUri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","name":"3_4_TFT_Rainbow"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4824

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino","languageId":"cpp","version":1,"text":"/*\r\n  An example showing rainbow colours on a 1.8\" TFT LCD screen\r\n  and to show a basic example of font use.\r\n\r\n  Make sure all the display driver and pin connections are correct by\r\n  editing the User_Setup.h file in the TFT_eSPI library folder.\r\n\r\n  Note that yield() or delay(0) must be called in long duration for/while\r\n  loops to stop the ESP8266 watchdog triggering.\r\n\r\n  #########################################################################\r\n  ###### DON'T FORGET TO UPDATE THE User_Setup.h FILE IN THE LIBRARY ######\r\n  #########################################################################\r\n*/\r\n\r\n#include <TFT_eSPI.h> // Graphics and font library for ST7735 driver chip\r\n#include <SPI.h>\r\n\r\n\r\nTFT_eSPI tft = TFT_eSPI();  // Invoke library, pins defined in User_Setup.h\r\n\r\nunsigned long targetTime = 0;\r\nbyte red = 31;\r\nbyte green = 0;\r\nbyte blue = 0;\r\nbyte state = 0;\r\nunsigned int colour = red << 11;\r\n\r\nvoid setup(void) {\r\n  tft.init();\r\n  tft.setRotation(1);\r\n  //tft.fillScreen(TFT_BLACK);\r\n  targetTime = millis() + 100;\r\n}\r\n\r\nvoid loop() {\r\n   tft.fillScreen(TFT_RED);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_GREEN);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_BLUE);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_BLACK);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_WHITE);\r\n   delay(1000);\r\n   tft.fillScreen(random(0x10000));\r\n   delay(1000);\r\n\r\n  // LCD_Clear(0x0000);\r\n   //delay(2000);\r\n   // LCD_Clear(0xfffc);\r\n   //delay(2000);\r\n   if (targetTime < millis()) \r\n   {\r\n    targetTime = millis() + 10000;\r\n\r\n    // Colour changing state machine\r\n   for (int i = 0; i < 320; i++) {\r\n      tft.drawFastVLine(i, 0, tft.height(), colour);\r\n      switch (state) {\r\n        case 0:\r\n          green += 2;\r\n          if (green == 64) {\r\n            green = 63;\r\n            state = 1;\r\n          }\r\n          break;\r\n        case 1:\r\n          red--;\r\n          if (red == 255) {\r\n            red = 0;\r\n            state = 2;\r\n          }\r\n          break;\r\n        case 2:\r\n          blue ++;\r\n          if (blue == 32) {\r\n            blue = 31;\r\n            state = 3;\r\n          }\r\n          break;\r\n        case 3:\r\n          green -= 2;\r\n          if (green == 255) {\r\n            green = 0;\r\n            state = 4;\r\n          }\r\n          break;\r\n        case 4:\r\n          red ++;\r\n          if (red == 32) {\r\n            red = 31;\r\n            state = 5;\r\n          }\r\n          break;\r\n        case 5:\r\n          blue --;\r\n          if (blue == 255) {\r\n            blue = 0;\r\n            state = 0;\r\n          }\r\n          break;\r\n      }\r\n      colour = red << 11 | green << 5 | blue;\r\n    }\r\n\r\n    // The standard ADAFruit font still works as before\r\n    tft.setTextColor(TFT_BLACK);\r\n    tft.setCursor (12, 5);\r\n    tft.print(\"Original ADAfruit font!\");\r\n\r\n    // The new larger fonts do not use the .setCursor call, coords are embedded\r\n    tft.setTextColor(TFT_BLACK, TFT_BLACK); // Do not plot the background colour\r\n\r\n    // Overlay the black text on top of the rainbow plot (the advantage of not drawing the backgorund colour!)\r\n    tft.drawCentreString(\"Font size 2\", 80, 14, 2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    //tft.drawCentreString(\"Font size 2\",81,12,2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    tft.drawCentreString(\"Font size 4\", 80, 30, 4); // Draw text centre at position 80, 24 using font 4\r\n\r\n    tft.drawCentreString(\"12.34\", 80, 54, 6); // Draw text centre at position 80, 24 using font 6\r\n\r\n    tft.drawCentreString(\"12.34 is in font size 6\", 80, 92, 2); // Draw text centre at position 80, 90 using font 2\r\n\r\n    // Note the x position is the top left of the font!\r\n\r\n    // draw a floating point number\r\n    float pi = 3.14159; // Value to print\r\n    int precision = 3;  // Number of digits after decimal point\r\n    int xpos = 50;      // x position\r\n    int ypos = 110;     // y position\r\n    int font = 2;       // font number only 2,4,6,7 valid. Font 6 only contains characters [space] 0 1 2 3 4 5 6 7 8 9 0 : a p m\r\n    xpos += tft.drawFloat(pi, precision, xpos, ypos, font); // Draw rounded number and return new xpos delta for next print position\r\n    tft.drawString(\" is pi\", xpos, ypos, font); // Continue printing from new x position\r\n    delay(6000);\r\n  }\r\n}\r\n"}}}Content-Length: 348

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino"},"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":4}},"context":{"diagnostics":[]}}}






Started logging.

<<<
Content-Length: 3269

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":12544,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"c:\\Users\\zhang'pei\\Desktop\\ESP32-2432S028例子\\arduino\\Source code\\3_4-1_TFT_Rainbow\\3_4_TFT_Rainbow","rootUri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","name":"3_4_TFT_Rainbow"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4824

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino","languageId":"cpp","version":1,"text":"/*\r\n  An example showing rainbow colours on a 1.8\" TFT LCD screen\r\n  and to show a basic example of font use.\r\n\r\n  Make sure all the display driver and pin connections are correct by\r\n  editing the User_Setup.h file in the TFT_eSPI library folder.\r\n\r\n  Note that yield() or delay(0) must be called in long duration for/while\r\n  loops to stop the ESP8266 watchdog triggering.\r\n\r\n  #########################################################################\r\n  ###### DON'T FORGET TO UPDATE THE User_Setup.h FILE IN THE LIBRARY ######\r\n  #########################################################################\r\n*/\r\n\r\n#include <TFT_eSPI.h> // Graphics and font library for ST7735 driver chip\r\n#include <SPI.h>\r\n\r\n\r\nTFT_eSPI tft = TFT_eSPI();  // Invoke library, pins defined in User_Setup.h\r\n\r\nunsigned long targetTime = 0;\r\nbyte red = 31;\r\nbyte green = 0;\r\nbyte blue = 0;\r\nbyte state = 0;\r\nunsigned int colour = red << 11;\r\n\r\nvoid setup(void) {\r\n  tft.init();\r\n  tft.setRotation(1);\r\n  //tft.fillScreen(TFT_BLACK);\r\n  targetTime = millis() + 100;\r\n}\r\n\r\nvoid loop() {\r\n   tft.fillScreen(TFT_RED);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_GREEN);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_BLUE);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_BLACK);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_WHITE);\r\n   delay(1000);\r\n   tft.fillScreen(random(0x10000));\r\n   delay(1000);\r\n\r\n  // LCD_Clear(0x0000);\r\n   //delay(2000);\r\n   // LCD_Clear(0xfffc);\r\n   //delay(2000);\r\n   if (targetTime < millis()) \r\n   {\r\n    targetTime = millis() + 10000;\r\n\r\n    // Colour changing state machine\r\n   for (int i = 0; i < 320; i++) {\r\n      tft.drawFastVLine(i, 0, tft.height(), colour);\r\n      switch (state) {\r\n        case 0:\r\n          green += 2;\r\n          if (green == 64) {\r\n            green = 63;\r\n            state = 1;\r\n          }\r\n          break;\r\n        case 1:\r\n          red--;\r\n          if (red == 255) {\r\n            red = 0;\r\n            state = 2;\r\n          }\r\n          break;\r\n        case 2:\r\n          blue ++;\r\n          if (blue == 32) {\r\n            blue = 31;\r\n            state = 3;\r\n          }\r\n          break;\r\n        case 3:\r\n          green -= 2;\r\n          if (green == 255) {\r\n            green = 0;\r\n            state = 4;\r\n          }\r\n          break;\r\n        case 4:\r\n          red ++;\r\n          if (red == 32) {\r\n            red = 31;\r\n            state = 5;\r\n          }\r\n          break;\r\n        case 5:\r\n          blue --;\r\n          if (blue == 255) {\r\n            blue = 0;\r\n            state = 0;\r\n          }\r\n          break;\r\n      }\r\n      colour = red << 11 | green << 5 | blue;\r\n    }\r\n\r\n    // The standard ADAFruit font still works as before\r\n    tft.setTextColor(TFT_BLACK);\r\n    tft.setCursor (12, 5);\r\n    tft.print(\"Original ADAfruit font!\");\r\n\r\n    // The new larger fonts do not use the .setCursor call, coords are embedded\r\n    tft.setTextColor(TFT_BLACK, TFT_BLACK); // Do not plot the background colour\r\n\r\n    // Overlay the black text on top of the rainbow plot (the advantage of not drawing the backgorund colour!)\r\n    tft.drawCentreString(\"Font size 2\", 80, 14, 2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    //tft.drawCentreString(\"Font size 2\",81,12,2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    tft.drawCentreString(\"Font size 4\", 80, 30, 4); // Draw text centre at position 80, 24 using font 4\r\n\r\n    tft.drawCentreString(\"12.34\", 80, 54, 6); // Draw text centre at position 80, 24 using font 6\r\n\r\n    tft.drawCentreString(\"12.34 is in font size 6\", 80, 92, 2); // Draw text centre at position 80, 90 using font 2\r\n\r\n    // Note the x position is the top left of the font!\r\n\r\n    // draw a floating point number\r\n    float pi = 3.14159; // Value to print\r\n    int precision = 3;  // Number of digits after decimal point\r\n    int xpos = 50;      // x position\r\n    int ypos = 110;     // y position\r\n    int font = 2;       // font number only 2,4,6,7 valid. Font 6 only contains characters [space] 0 1 2 3 4 5 6 7 8 9 0 : a p m\r\n    xpos += tft.drawFloat(pi, precision, xpos, ypos, font); // Draw rounded number and return new xpos delta for next print position\r\n    tft.drawString(\" is pi\", xpos, ypos, font); // Continue printing from new x position\r\n    delay(6000);\r\n  }\r\n}\r\n"}}}Content-Length: 348

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino"},"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":4}},"context":{"diagnostics":[]}}}Content-Length: 276

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/zhang%27pei/Desktop/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino"},"position":{"line":32,"character":20}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}






Started logging.

<<<
Content-Length: 3384

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":6136,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"e:\\晶彩\\开发资料\\ESP32模块\\ESP32-2432S028例子\\arduino\\Source code\\3_4-1_TFT_Rainbow\\3_4_TFT_Rainbow","rootUri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E5%BC%80%E5%8F%91%E8%B5%84%E6%96%99/ESP32%E6%A8%A1%E5%9D%97/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E5%BC%80%E5%8F%91%E8%B5%84%E6%96%99/ESP32%E6%A8%A1%E5%9D%97/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","name":"3_4_TFT_Rainbow"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4878

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E5%BC%80%E5%8F%91%E8%B5%84%E6%96%99/ESP32%E6%A8%A1%E5%9D%97/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino","languageId":"cpp","version":1,"text":"/*\r\n  An example showing rainbow colours on a 1.8\" TFT LCD screen\r\n  and to show a basic example of font use.\r\n\r\n  Make sure all the display driver and pin connections are correct by\r\n  editing the User_Setup.h file in the TFT_eSPI library folder.\r\n\r\n  Note that yield() or delay(0) must be called in long duration for/while\r\n  loops to stop the ESP8266 watchdog triggering.\r\n\r\n  #########################################################################\r\n  ###### DON'T FORGET TO UPDATE THE User_Setup.h FILE IN THE LIBRARY ######\r\n  #########################################################################\r\n*/\r\n\r\n#include <TFT_eSPI.h> // Graphics and font library for ST7735 driver chip\r\n#include <SPI.h>\r\n\r\n\r\nTFT_eSPI tft = TFT_eSPI();  // Invoke library, pins defined in User_Setup.h\r\n\r\nunsigned long targetTime = 0;\r\nbyte red = 31;\r\nbyte green = 0;\r\nbyte blue = 0;\r\nbyte state = 0;\r\nunsigned int colour = red << 11;\r\n\r\nvoid setup(void) {\r\n  tft.init();\r\n  tft.setRotation(1);\r\n  //tft.fillScreen(TFT_BLACK);\r\n  targetTime = millis() + 100;\r\n}\r\n\r\nvoid loop() {\r\n   tft.fillScreen(TFT_RED);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_GREEN);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_BLUE);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_BLACK);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_WHITE);\r\n   delay(1000);\r\n   tft.fillScreen(random(0x10000));\r\n   delay(1000);\r\n\r\n  // LCD_Clear(0x0000);\r\n   //delay(2000);\r\n   // LCD_Clear(0xfffc);\r\n   //delay(2000);\r\n   if (targetTime < millis()) \r\n   {\r\n    targetTime = millis() + 10000;\r\n\r\n    // Colour changing state machine\r\n   for (int i = 0; i < 320; i++) {\r\n      tft.drawFastVLine(i, 0, tft.height(), colour);\r\n      switch (state) {\r\n        case 0:\r\n          green += 2;\r\n          if (green == 64) {\r\n            green = 63;\r\n            state = 1;\r\n          }\r\n          break;\r\n        case 1:\r\n          red--;\r\n          if (red == 255) {\r\n            red = 0;\r\n            state = 2;\r\n          }\r\n          break;\r\n        case 2:\r\n          blue ++;\r\n          if (blue == 32) {\r\n            blue = 31;\r\n            state = 3;\r\n          }\r\n          break;\r\n        case 3:\r\n          green -= 2;\r\n          if (green == 255) {\r\n            green = 0;\r\n            state = 4;\r\n          }\r\n          break;\r\n        case 4:\r\n          red ++;\r\n          if (red == 32) {\r\n            red = 31;\r\n            state = 5;\r\n          }\r\n          break;\r\n        case 5:\r\n          blue --;\r\n          if (blue == 255) {\r\n            blue = 0;\r\n            state = 0;\r\n          }\r\n          break;\r\n      }\r\n      colour = red << 11 | green << 5 | blue;\r\n    }\r\n\r\n    // The standard ADAFruit font still works as before\r\n    tft.setTextColor(TFT_BLACK);\r\n    tft.setCursor (12, 5);\r\n    tft.print(\"Original ADAfruit font!\");\r\n\r\n    // The new larger fonts do not use the .setCursor call, coords are embedded\r\n    tft.setTextColor(TFT_BLACK, TFT_BLACK); // Do not plot the background colour\r\n\r\n    // Overlay the black text on top of the rainbow plot (the advantage of not drawing the backgorund colour!)\r\n    tft.drawCentreString(\"Font size 2\", 80, 14, 2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    //tft.drawCentreString(\"Font size 2\",81,12,2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    tft.drawCentreString(\"Font size 4\", 80, 30, 4); // Draw text centre at position 80, 24 using font 4\r\n\r\n    tft.drawCentreString(\"12.34\", 80, 54, 6); // Draw text centre at position 80, 24 using font 6\r\n\r\n    tft.drawCentreString(\"12.34 is in font size 6\", 80, 92, 2); // Draw text centre at position 80, 90 using font 2\r\n\r\n    // Note the x position is the top left of the font!\r\n\r\n    // draw a floating point number\r\n    float pi = 3.14159; // Value to print\r\n    int precision = 3;  // Number of digits after decimal point\r\n    int xpos = 50;      // x position\r\n    int ypos = 110;     // y position\r\n    int font = 2;       // font number only 2,4,6,7 valid. Font 6 only contains characters [space] 0 1 2 3 4 5 6 7 8 9 0 : a p m\r\n    xpos += tft.drawFloat(pi, precision, xpos, ypos, font); // Draw rounded number and return new xpos delta for next print position\r\n    tft.drawString(\" is pi\", xpos, ypos, font); // Continue printing from new x position\r\n    delay(6000);\r\n  }\r\n}\r\n"}}}Content-Length: 400

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E5%BC%80%E5%8F%91%E8%B5%84%E6%96%99/ESP32%E6%A8%A1%E5%9D%97/ESP32-2432S028%E4%BE%8B%E5%AD%90/arduino/Source%20code/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}






Started logging.

<<<
Content-Length: 3324

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":18256,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"e:\\晶彩\\资料下载\\ESP32\\2.8inch_ESP32-2432S028R\\1-Demo\\Demo_Arduino\\3_4-1_TFT_Rainbow\\3_4_TFT_Rainbow","rootUri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","name":"3_4_TFT_Rainbow"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4849

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino","languageId":"cpp","version":1,"text":"/*\r\n  An example showing rainbow colours on a 1.8\" TFT LCD screen\r\n  and to show a basic example of font use.\r\n\r\n  Make sure all the display driver and pin connections are correct by\r\n  editing the User_Setup.h file in the TFT_eSPI library folder.\r\n\r\n  Note that yield() or delay(0) must be called in long duration for/while\r\n  loops to stop the ESP8266 watchdog triggering.\r\n\r\n  #########################################################################\r\n  ###### DON'T FORGET TO UPDATE THE User_Setup.h FILE IN THE LIBRARY ######\r\n  #########################################################################\r\n*/\r\n\r\n#include <TFT_eSPI.h> // Graphics and font library for ST7735 driver chip\r\n#include <SPI.h>\r\n\r\n\r\nTFT_eSPI tft = TFT_eSPI();  // Invoke library, pins defined in User_Setup.h\r\n\r\nunsigned long targetTime = 0;\r\nbyte red = 31;\r\nbyte green = 0;\r\nbyte blue = 0;\r\nbyte state = 0;\r\nunsigned int colour = red << 11;\r\n\r\nvoid setup(void) {\r\n  tft.init();\r\n  tft.setRotation(1);\r\n  //tft.fillScreen(TFT_BLACK);\r\n  targetTime = millis() + 100;\r\n}\r\n\r\nvoid loop() {\r\n   tft.fillScreen(TFT_RED);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_GREEN);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_BLUE);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_BLACK);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_WHITE);\r\n   delay(1000);\r\n   tft.fillScreen(random(0x10000));\r\n   delay(1000);\r\n\r\n  // LCD_Clear(0x0000);\r\n   //delay(2000);\r\n   // LCD_Clear(0xfffc);\r\n   //delay(2000);\r\n   if (targetTime < millis()) \r\n   {\r\n    targetTime = millis() + 10000;\r\n\r\n    // Colour changing state machine\r\n   for (int i = 0; i < 320; i++) {\r\n      tft.drawFastVLine(i, 0, tft.height(), colour);\r\n      switch (state) {\r\n        case 0:\r\n          green += 2;\r\n          if (green == 64) {\r\n            green = 63;\r\n            state = 1;\r\n          }\r\n          break;\r\n        case 1:\r\n          red--;\r\n          if (red == 255) {\r\n            red = 0;\r\n            state = 2;\r\n          }\r\n          break;\r\n        case 2:\r\n          blue ++;\r\n          if (blue == 32) {\r\n            blue = 31;\r\n            state = 3;\r\n          }\r\n          break;\r\n        case 3:\r\n          green -= 2;\r\n          if (green == 255) {\r\n            green = 0;\r\n            state = 4;\r\n          }\r\n          break;\r\n        case 4:\r\n          red ++;\r\n          if (red == 32) {\r\n            red = 31;\r\n            state = 5;\r\n          }\r\n          break;\r\n        case 5:\r\n          blue --;\r\n          if (blue == 255) {\r\n            blue = 0;\r\n            state = 0;\r\n          }\r\n          break;\r\n      }\r\n      colour = red << 11 | green << 5 | blue;\r\n    }\r\n\r\n    // The standard ADAFruit font still works as before\r\n    tft.setTextColor(TFT_BLACK);\r\n    tft.setCursor (12, 5);\r\n    tft.print(\"Original ADAfruit font!\");\r\n\r\n    // The new larger fonts do not use the .setCursor call, coords are embedded\r\n    tft.setTextColor(TFT_BLACK, TFT_BLACK); // Do not plot the background colour\r\n\r\n    // Overlay the black text on top of the rainbow plot (the advantage of not drawing the backgorund colour!)\r\n    tft.drawCentreString(\"Font size 2\", 80, 14, 2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    //tft.drawCentreString(\"Font size 2\",81,12,2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    tft.drawCentreString(\"Font size 4\", 80, 30, 4); // Draw text centre at position 80, 24 using font 4\r\n\r\n    tft.drawCentreString(\"12.34\", 80, 54, 6); // Draw text centre at position 80, 24 using font 6\r\n\r\n    tft.drawCentreString(\"12.34 is in font size 6\", 80, 92, 2); // Draw text centre at position 80, 90 using font 2\r\n\r\n    // Note the x position is the top left of the font!\r\n\r\n    // draw a floating point number\r\n    float pi = 3.14159; // Value to print\r\n    int precision = 3;  // Number of digits after decimal point\r\n    int xpos = 50;      // x position\r\n    int ypos = 110;     // y position\r\n    int font = 2;       // font number only 2,4,6,7 valid. Font 6 only contains characters [space] 0 1 2 3 4 5 6 7 8 9 0 : a p m\r\n    xpos += tft.drawFloat(pi, precision, xpos, ypos, font); // Draw rounded number and return new xpos delta for next print position\r\n    tft.drawString(\" is pi\", xpos, ypos, font); // Continue printing from new x position\r\n    delay(6000);\r\n  }\r\n}\r\n"}}}Content-Length: 371

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}






Started logging.

<<<
Content-Length: 3323

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":1936,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"e:\\晶彩\\资料下载\\ESP32\\2.8inch_ESP32-2432S028R\\1-Demo\\Demo_Arduino\\3_4-1_TFT_Rainbow\\3_4_TFT_Rainbow","rootUri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","name":"3_4_TFT_Rainbow"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4849

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino","languageId":"cpp","version":1,"text":"/*\r\n  An example showing rainbow colours on a 1.8\" TFT LCD screen\r\n  and to show a basic example of font use.\r\n\r\n  Make sure all the display driver and pin connections are correct by\r\n  editing the User_Setup.h file in the TFT_eSPI library folder.\r\n\r\n  Note that yield() or delay(0) must be called in long duration for/while\r\n  loops to stop the ESP8266 watchdog triggering.\r\n\r\n  #########################################################################\r\n  ###### DON'T FORGET TO UPDATE THE User_Setup.h FILE IN THE LIBRARY ######\r\n  #########################################################################\r\n*/\r\n\r\n#include <TFT_eSPI.h> // Graphics and font library for ST7735 driver chip\r\n#include <SPI.h>\r\n\r\n\r\nTFT_eSPI tft = TFT_eSPI();  // Invoke library, pins defined in User_Setup.h\r\n\r\nunsigned long targetTime = 0;\r\nbyte red = 31;\r\nbyte green = 0;\r\nbyte blue = 0;\r\nbyte state = 0;\r\nunsigned int colour = red << 11;\r\n\r\nvoid setup(void) {\r\n  tft.init();\r\n  tft.setRotation(1);\r\n  //tft.fillScreen(TFT_BLACK);\r\n  targetTime = millis() + 100;\r\n}\r\n\r\nvoid loop() {\r\n   tft.fillScreen(TFT_RED);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_GREEN);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_BLUE);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_BLACK);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_WHITE);\r\n   delay(1000);\r\n   tft.fillScreen(random(0x10000));\r\n   delay(1000);\r\n\r\n  // LCD_Clear(0x0000);\r\n   //delay(2000);\r\n   // LCD_Clear(0xfffc);\r\n   //delay(2000);\r\n   if (targetTime < millis()) \r\n   {\r\n    targetTime = millis() + 10000;\r\n\r\n    // Colour changing state machine\r\n   for (int i = 0; i < 320; i++) {\r\n      tft.drawFastVLine(i, 0, tft.height(), colour);\r\n      switch (state) {\r\n        case 0:\r\n          green += 2;\r\n          if (green == 64) {\r\n            green = 63;\r\n            state = 1;\r\n          }\r\n          break;\r\n        case 1:\r\n          red--;\r\n          if (red == 255) {\r\n            red = 0;\r\n            state = 2;\r\n          }\r\n          break;\r\n        case 2:\r\n          blue ++;\r\n          if (blue == 32) {\r\n            blue = 31;\r\n            state = 3;\r\n          }\r\n          break;\r\n        case 3:\r\n          green -= 2;\r\n          if (green == 255) {\r\n            green = 0;\r\n            state = 4;\r\n          }\r\n          break;\r\n        case 4:\r\n          red ++;\r\n          if (red == 32) {\r\n            red = 31;\r\n            state = 5;\r\n          }\r\n          break;\r\n        case 5:\r\n          blue --;\r\n          if (blue == 255) {\r\n            blue = 0;\r\n            state = 0;\r\n          }\r\n          break;\r\n      }\r\n      colour = red << 11 | green << 5 | blue;\r\n    }\r\n\r\n    // The standard ADAFruit font still works as before\r\n    tft.setTextColor(TFT_BLACK);\r\n    tft.setCursor (12, 5);\r\n    tft.print(\"Original ADAfruit font!\");\r\n\r\n    // The new larger fonts do not use the .setCursor call, coords are embedded\r\n    tft.setTextColor(TFT_BLACK, TFT_BLACK); // Do not plot the background colour\r\n\r\n    // Overlay the black text on top of the rainbow plot (the advantage of not drawing the backgorund colour!)\r\n    tft.drawCentreString(\"Font size 2\", 80, 14, 2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    //tft.drawCentreString(\"Font size 2\",81,12,2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    tft.drawCentreString(\"Font size 4\", 80, 30, 4); // Draw text centre at position 80, 24 using font 4\r\n\r\n    tft.drawCentreString(\"12.34\", 80, 54, 6); // Draw text centre at position 80, 24 using font 6\r\n\r\n    tft.drawCentreString(\"12.34 is in font size 6\", 80, 92, 2); // Draw text centre at position 80, 90 using font 2\r\n\r\n    // Note the x position is the top left of the font!\r\n\r\n    // draw a floating point number\r\n    float pi = 3.14159; // Value to print\r\n    int precision = 3;  // Number of digits after decimal point\r\n    int xpos = 50;      // x position\r\n    int ypos = 110;     // y position\r\n    int font = 2;       // font number only 2,4,6,7 valid. Font 6 only contains characters [space] 0 1 2 3 4 5 6 7 8 9 0 : a p m\r\n    xpos += tft.drawFloat(pi, precision, xpos, ypos, font); // Draw rounded number and return new xpos delta for next print position\r\n    tft.drawString(\" is pi\", xpos, ypos, font); // Continue printing from new x position\r\n    delay(6000);\r\n  }\r\n}\r\n"}}}Content-Length: 371

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 302

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino"},"position":{"line":122,"character":91}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 302

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino"},"position":{"line":122,"character":91}}}






Started logging.

<<<
Content-Length: 3323

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":7004,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"e:\\晶彩\\资料下载\\ESP32\\2.8inch_ESP32-2432S028R\\1-Demo\\Demo_Arduino\\3_4-1_TFT_Rainbow\\3_4_TFT_Rainbow","rootUri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","name":"3_4_TFT_Rainbow"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4849

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino","languageId":"cpp","version":1,"text":"/*\r\n  An example showing rainbow colours on a 1.8\" TFT LCD screen\r\n  and to show a basic example of font use.\r\n\r\n  Make sure all the display driver and pin connections are correct by\r\n  editing the User_Setup.h file in the TFT_eSPI library folder.\r\n\r\n  Note that yield() or delay(0) must be called in long duration for/while\r\n  loops to stop the ESP8266 watchdog triggering.\r\n\r\n  #########################################################################\r\n  ###### DON'T FORGET TO UPDATE THE User_Setup.h FILE IN THE LIBRARY ######\r\n  #########################################################################\r\n*/\r\n\r\n#include <TFT_eSPI.h> // Graphics and font library for ST7735 driver chip\r\n#include <SPI.h>\r\n\r\n\r\nTFT_eSPI tft = TFT_eSPI();  // Invoke library, pins defined in User_Setup.h\r\n\r\nunsigned long targetTime = 0;\r\nbyte red = 31;\r\nbyte green = 0;\r\nbyte blue = 0;\r\nbyte state = 0;\r\nunsigned int colour = red << 11;\r\n\r\nvoid setup(void) {\r\n  tft.init();\r\n  tft.setRotation(1);\r\n  //tft.fillScreen(TFT_BLACK);\r\n  targetTime = millis() + 100;\r\n}\r\n\r\nvoid loop() {\r\n   tft.fillScreen(TFT_RED);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_GREEN);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_BLUE);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_BLACK);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_WHITE);\r\n   delay(1000);\r\n   tft.fillScreen(random(0x10000));\r\n   delay(1000);\r\n\r\n  // LCD_Clear(0x0000);\r\n   //delay(2000);\r\n   // LCD_Clear(0xfffc);\r\n   //delay(2000);\r\n   if (targetTime < millis()) \r\n   {\r\n    targetTime = millis() + 10000;\r\n\r\n    // Colour changing state machine\r\n   for (int i = 0; i < 320; i++) {\r\n      tft.drawFastVLine(i, 0, tft.height(), colour);\r\n      switch (state) {\r\n        case 0:\r\n          green += 2;\r\n          if (green == 64) {\r\n            green = 63;\r\n            state = 1;\r\n          }\r\n          break;\r\n        case 1:\r\n          red--;\r\n          if (red == 255) {\r\n            red = 0;\r\n            state = 2;\r\n          }\r\n          break;\r\n        case 2:\r\n          blue ++;\r\n          if (blue == 32) {\r\n            blue = 31;\r\n            state = 3;\r\n          }\r\n          break;\r\n        case 3:\r\n          green -= 2;\r\n          if (green == 255) {\r\n            green = 0;\r\n            state = 4;\r\n          }\r\n          break;\r\n        case 4:\r\n          red ++;\r\n          if (red == 32) {\r\n            red = 31;\r\n            state = 5;\r\n          }\r\n          break;\r\n        case 5:\r\n          blue --;\r\n          if (blue == 255) {\r\n            blue = 0;\r\n            state = 0;\r\n          }\r\n          break;\r\n      }\r\n      colour = red << 11 | green << 5 | blue;\r\n    }\r\n\r\n    // The standard ADAFruit font still works as before\r\n    tft.setTextColor(TFT_BLACK);\r\n    tft.setCursor (12, 5);\r\n    tft.print(\"Original ADAfruit font!\");\r\n\r\n    // The new larger fonts do not use the .setCursor call, coords are embedded\r\n    tft.setTextColor(TFT_BLACK, TFT_BLACK); // Do not plot the background colour\r\n\r\n    // Overlay the black text on top of the rainbow plot (the advantage of not drawing the backgorund colour!)\r\n    tft.drawCentreString(\"Font size 2\", 80, 14, 2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    //tft.drawCentreString(\"Font size 2\",81,12,2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    tft.drawCentreString(\"Font size 4\", 80, 30, 4); // Draw text centre at position 80, 24 using font 4\r\n\r\n    tft.drawCentreString(\"12.34\", 80, 54, 6); // Draw text centre at position 80, 24 using font 6\r\n\r\n    tft.drawCentreString(\"12.34 is in font size 6\", 80, 92, 2); // Draw text centre at position 80, 90 using font 2\r\n\r\n    // Note the x position is the top left of the font!\r\n\r\n    // draw a floating point number\r\n    float pi = 3.14159; // Value to print\r\n    int precision = 3;  // Number of digits after decimal point\r\n    int xpos = 50;      // x position\r\n    int ypos = 110;     // y position\r\n    int font = 2;       // font number only 2,4,6,7 valid. Font 6 only contains characters [space] 0 1 2 3 4 5 6 7 8 9 0 : a p m\r\n    xpos += tft.drawFloat(pi, precision, xpos, ypos, font); // Draw rounded number and return new xpos delta for next print position\r\n    tft.drawString(\" is pi\", xpos, ypos, font); // Continue printing from new x position\r\n    delay(6000);\r\n  }\r\n}\r\n"}}}Content-Length: 371

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}






Started logging.

<<<
Content-Length: 3324

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":11144,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"e:\\晶彩\\资料下载\\ESP32\\2.8inch_ESP32-2432S028R\\1-Demo\\Demo_Arduino\\3_4-1_TFT_Rainbow\\3_4_TFT_Rainbow","rootUri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow","name":"3_4_TFT_Rainbow"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4849

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino","languageId":"cpp","version":1,"text":"/*\r\n  An example showing rainbow colours on a 1.8\" TFT LCD screen\r\n  and to show a basic example of font use.\r\n\r\n  Make sure all the display driver and pin connections are correct by\r\n  editing the User_Setup.h file in the TFT_eSPI library folder.\r\n\r\n  Note that yield() or delay(0) must be called in long duration for/while\r\n  loops to stop the ESP8266 watchdog triggering.\r\n\r\n  #########################################################################\r\n  ###### DON'T FORGET TO UPDATE THE User_Setup.h FILE IN THE LIBRARY ######\r\n  #########################################################################\r\n*/\r\n\r\n#include <TFT_eSPI.h> // Graphics and font library for ST7735 driver chip\r\n#include <SPI.h>\r\n\r\n\r\nTFT_eSPI tft = TFT_eSPI();  // Invoke library, pins defined in User_Setup.h\r\n\r\nunsigned long targetTime = 0;\r\nbyte red = 31;\r\nbyte green = 0;\r\nbyte blue = 0;\r\nbyte state = 0;\r\nunsigned int colour = red << 11;\r\n\r\nvoid setup(void) {\r\n  tft.init();\r\n  tft.setRotation(1);\r\n  //tft.fillScreen(TFT_BLACK);\r\n  targetTime = millis() + 100;\r\n}\r\n\r\nvoid loop() {\r\n   tft.fillScreen(TFT_RED);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_GREEN);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_BLUE);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_BLACK);\r\n   delay(1000);\r\n   tft.fillScreen(TFT_WHITE);\r\n   delay(1000);\r\n   tft.fillScreen(random(0x10000));\r\n   delay(1000);\r\n\r\n  // LCD_Clear(0x0000);\r\n   //delay(2000);\r\n   // LCD_Clear(0xfffc);\r\n   //delay(2000);\r\n   if (targetTime < millis()) \r\n   {\r\n    targetTime = millis() + 10000;\r\n\r\n    // Colour changing state machine\r\n   for (int i = 0; i < 320; i++) {\r\n      tft.drawFastVLine(i, 0, tft.height(), colour);\r\n      switch (state) {\r\n        case 0:\r\n          green += 2;\r\n          if (green == 64) {\r\n            green = 63;\r\n            state = 1;\r\n          }\r\n          break;\r\n        case 1:\r\n          red--;\r\n          if (red == 255) {\r\n            red = 0;\r\n            state = 2;\r\n          }\r\n          break;\r\n        case 2:\r\n          blue ++;\r\n          if (blue == 32) {\r\n            blue = 31;\r\n            state = 3;\r\n          }\r\n          break;\r\n        case 3:\r\n          green -= 2;\r\n          if (green == 255) {\r\n            green = 0;\r\n            state = 4;\r\n          }\r\n          break;\r\n        case 4:\r\n          red ++;\r\n          if (red == 32) {\r\n            red = 31;\r\n            state = 5;\r\n          }\r\n          break;\r\n        case 5:\r\n          blue --;\r\n          if (blue == 255) {\r\n            blue = 0;\r\n            state = 0;\r\n          }\r\n          break;\r\n      }\r\n      colour = red << 11 | green << 5 | blue;\r\n    }\r\n\r\n    // The standard ADAFruit font still works as before\r\n    tft.setTextColor(TFT_BLACK);\r\n    tft.setCursor (12, 5);\r\n    tft.print(\"Original ADAfruit font!\");\r\n\r\n    // The new larger fonts do not use the .setCursor call, coords are embedded\r\n    tft.setTextColor(TFT_BLACK, TFT_BLACK); // Do not plot the background colour\r\n\r\n    // Overlay the black text on top of the rainbow plot (the advantage of not drawing the backgorund colour!)\r\n    tft.drawCentreString(\"Font size 2\", 80, 14, 2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    //tft.drawCentreString(\"Font size 2\",81,12,2); // Draw text centre at position 80, 12 using font 2\r\n\r\n    tft.drawCentreString(\"Font size 4\", 80, 30, 4); // Draw text centre at position 80, 24 using font 4\r\n\r\n    tft.drawCentreString(\"12.34\", 80, 54, 6); // Draw text centre at position 80, 24 using font 6\r\n\r\n    tft.drawCentreString(\"12.34 is in font size 6\", 80, 92, 2); // Draw text centre at position 80, 90 using font 2\r\n\r\n    // Note the x position is the top left of the font!\r\n\r\n    // draw a floating point number\r\n    float pi = 3.14159; // Value to print\r\n    int precision = 3;  // Number of digits after decimal point\r\n    int xpos = 50;      // x position\r\n    int ypos = 110;     // y position\r\n    int font = 2;       // font number only 2,4,6,7 valid. Font 6 only contains characters [space] 0 1 2 3 4 5 6 7 8 9 0 : a p m\r\n    xpos += tft.drawFloat(pi, precision, xpos, ypos, font); // Draw rounded number and return new xpos delta for next print position\r\n    tft.drawString(\" is pi\", xpos, ypos, font); // Continue printing from new x position\r\n    delay(6000);\r\n  }\r\n}\r\n"}}}Content-Length: 371

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 302

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/3_4-1_TFT_Rainbow/3_4_TFT_Rainbow/3_4_TFT_Rainbow.ino"},"position":{"line":115,"character":90}}}