






Started logging.

<<<
Content-Length: 3266

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":2380,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"e:\\晶彩\\资料下载\\ESP32\\2.8inch_ESP32-2432S028R\\1-Demo\\Demo_Arduino\\6_1_SD_Jpg\\SD_Jpg","rootUri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/6_1_SD_Jpg/SD_Jpg","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/6_1_SD_Jpg/SD_Jpg","name":"SD_Jpg"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3013

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/6_1_SD_Jpg/SD_Jpg/SD_Jpg.ino","languageId":"cpp","version":1,"text":"// Example for library:\n// https://github.com/Bodmer/TJpg_Decoder\n\n// This example if for an ESP8266 or ESP32, it renders a Jpeg file\n// that is stored in a SD card file. The test image is in the sketch\n// \"data\" folder (press Ctrl+K to see it). You must save the image\n// to the SD card using you PC.\n\n// Include the jpeg decoder library\n#include <TJpg_Decoder.h>\n\n// Include SD\n#define FS_NO_GLOBALS\n#include <FS.h>\n#ifdef ESP32\n  #include \"SPIFFS.h\" // ESP32 only\n#endif\n\n#define SD_CS   5\n\n// Include the TFT library https://github.com/Bodmer/TFT_eSPI\n#include \"SPI.h\"\n#include <TFT_eSPI.h>              // Hardware-specific library\nTFT_eSPI tft = TFT_eSPI();         // Invoke custom library\n\n\n// This next function will be called during decoding of the jpeg file to\n// render each block to the TFT.  If you use a different TFT library\n// you will need to adapt this function to suit.\nbool tft_output(int16_t x, int16_t y, uint16_t w, uint16_t h, uint16_t* bitmap)\n{\n   // Stop further decoding as image is running off bottom of screen\n  if ( y >= tft.height() ) return 0;\n\n  // This function will clip the image block rendering automatically at the TFT boundaries\n  tft.pushImage(x, y, w, h, bitmap);\n\n  // This might work instead if you adapt the sketch to use the Adafruit_GFX library\n  // tft.drawRGBBitmap(x, y, bitmap, w, h);\n\n  // Return 1 to decode next block\n  return 1;\n}\n\n\nvoid setup()\n{\n  Serial.begin(115200);\n  Serial.println(\"\\n\\n Testing TJpg_Decoder library\");\n\n  // Initialise SD before TFT\n  if (!SD.begin(SD_CS)) {\n    Serial.println(F(\"SD.begin failed!\"));\n    while (1) delay(0);\n  }\n  Serial.println(\"\\r\\nInitialisation done.\");\n\n  // Initialise the TFT\n  tft.begin();\n  tft.setTextColor(0xFFFF, 0x0000);\n  tft.fillScreen(TFT_BLACK);\n  tft.setSwapBytes(true); // We need to swap the colour bytes (endianess)\n\n  // The jpeg image can be scaled by a factor of 1, 2, 4, or 8\n  TJpgDec.setJpgScale(1);\n\n  // The decoder must be given the exact name of the rendering function above\n  TJpgDec.setCallback(tft_output);\n}\n\nvoid loop()\n{\n  tft.fillScreen(TFT_RED);\n  delay(2000);\n\n  // Time recorded for test purposes\n  uint32_t t = millis();\n\n  // Get the width and height in pixels of the jpeg if you wish\n  uint16_t w = 0, h = 0;\n  TJpgDec.getSdJpgSize(&w, &h, \"/panda.jpg\");\n  Serial.print(\"Width = \"); Serial.print(w); Serial.print(\", height = \"); Serial.println(h);\n\n  // Draw the image, top left at 0,0\n  TJpgDec.drawSdJpg(0, 0, \"/panda.jpg\");\n\n  // How much time did rendering take\n  t = millis() - t;\n  Serial.print(t); Serial.println(\" ms\");\n\n  // Wait before drawing again\n  delay(2000);\n}\n"}}}






Started logging.

<<<
Content-Length: 3267

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":17328,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"e:\\晶彩\\资料下载\\ESP32\\2.8inch_ESP32-2432S028R\\1-Demo\\Demo_Arduino\\6_1_SD_Jpg\\SD_Jpg","rootUri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/6_1_SD_Jpg/SD_Jpg","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/6_1_SD_Jpg/SD_Jpg","name":"SD_Jpg"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3013

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/%E6%99%B6%E5%BD%A9/%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/ESP32/2.8inch_ESP32-2432S028R/1-Demo/Demo_Arduino/6_1_SD_Jpg/SD_Jpg/SD_Jpg.ino","languageId":"cpp","version":1,"text":"// Example for library:\n// https://github.com/Bodmer/TJpg_Decoder\n\n// This example if for an ESP8266 or ESP32, it renders a Jpeg file\n// that is stored in a SD card file. The test image is in the sketch\n// \"data\" folder (press Ctrl+K to see it). You must save the image\n// to the SD card using you PC.\n\n// Include the jpeg decoder library\n#include <TJpg_Decoder.h>\n\n// Include SD\n#define FS_NO_GLOBALS\n#include <FS.h>\n#ifdef ESP32\n  #include \"SPIFFS.h\" // ESP32 only\n#endif\n\n#define SD_CS   5\n\n// Include the TFT library https://github.com/Bodmer/TFT_eSPI\n#include \"SPI.h\"\n#include <TFT_eSPI.h>              // Hardware-specific library\nTFT_eSPI tft = TFT_eSPI();         // Invoke custom library\n\n\n// This next function will be called during decoding of the jpeg file to\n// render each block to the TFT.  If you use a different TFT library\n// you will need to adapt this function to suit.\nbool tft_output(int16_t x, int16_t y, uint16_t w, uint16_t h, uint16_t* bitmap)\n{\n   // Stop further decoding as image is running off bottom of screen\n  if ( y >= tft.height() ) return 0;\n\n  // This function will clip the image block rendering automatically at the TFT boundaries\n  tft.pushImage(x, y, w, h, bitmap);\n\n  // This might work instead if you adapt the sketch to use the Adafruit_GFX library\n  // tft.drawRGBBitmap(x, y, bitmap, w, h);\n\n  // Return 1 to decode next block\n  return 1;\n}\n\n\nvoid setup()\n{\n  Serial.begin(115200);\n  Serial.println(\"\\n\\n Testing TJpg_Decoder library\");\n\n  // Initialise SD before TFT\n  if (!SD.begin(SD_CS)) {\n    Serial.println(F(\"SD.begin failed!\"));\n    while (1) delay(0);\n  }\n  Serial.println(\"\\r\\nInitialisation done.\");\n\n  // Initialise the TFT\n  tft.begin();\n  tft.setTextColor(0xFFFF, 0x0000);\n  tft.fillScreen(TFT_BLACK);\n  tft.setSwapBytes(true); // We need to swap the colour bytes (endianess)\n\n  // The jpeg image can be scaled by a factor of 1, 2, 4, or 8\n  TJpgDec.setJpgScale(1);\n\n  // The decoder must be given the exact name of the rendering function above\n  TJpgDec.setCallback(tft_output);\n}\n\nvoid loop()\n{\n  tft.fillScreen(TFT_RED);\n  delay(2000);\n\n  // Time recorded for test purposes\n  uint32_t t = millis();\n\n  // Get the width and height in pixels of the jpeg if you wish\n  uint16_t w = 0, h = 0;\n  TJpgDec.getSdJpgSize(&w, &h, \"/panda.jpg\");\n  Serial.print(\"Width = \"); Serial.print(w); Serial.print(\", height = \"); Serial.println(h);\n\n  // Draw the image, top left at 0,0\n  TJpgDec.drawSdJpg(0, 0, \"/panda.jpg\");\n\n  // How much time did rendering take\n  t = millis() - t;\n  Serial.print(t); Serial.println(\" ms\");\n\n  // Wait before drawing again\n  delay(2000);\n}\n"}}}